package engine.agent;

import transducer.*;

public class EndSensorPreOvenAgent extends Agent implements TReceiver{

	public boolean GlassOnSensor;
	public boolean PreviouslyGlassOnSensor;
	public Transducer transducer;
	public OvenAgent oven;
	public EndConveyorAgent conveyor;	// OvenConveyor1
	public gui.panels.DisplayPanel guiDisplayPanel;
	public int index;
	
	public EndSensorPreOvenAgent(String name){
		super(name);
		GlassOnSensor = false;
		PreviouslyGlassOnSensor = false;
	}
	
	public EndSensorPreOvenAgent(Transducer t, OvenAgent oven, EndConveyorAgent c, int ind, gui.panels.DisplayPanel gdp){
		GlassOnSensor = false;
		PreviouslyGlassOnSensor = false;
		this.oven = oven;
		conveyor = c;
		transducer = t;
		t.register(this, TChannel.ALL_AGENTS);
		t.register(this, TChannel.SENSOR);
		this.index = ind;
		this.guiDisplayPanel = gdp;
	}
	
	public void setEndSensorPreOvenAgent(Transducer t, OvenAgent o, EndConveyorAgent c, int ind, gui.panels.DisplayPanel gdp){
		transducer = t;
		t.register(this, TChannel.ALL_AGENTS);
		t.register(this, TChannel.SENSOR);
		oven = o;
		conveyor = c;
		this.index = ind;
		this.guiDisplayPanel = gdp;
	}
	
	
	
	
	@Override
	public void eventFired(TChannel channel, TEvent event, Object[] args) {
		// TODO Auto-generated method stub
		if(channel==TChannel.SENSOR && args[0]==(Object)index){
			if(event==TEvent.SENSOR_GUI_PRESSED) this.msgGlassOnSensor();
			if(event==TEvent.SENSOR_GUI_RELEASED) this.msgGlassOffSensor();
		}	
	}

	@Override
	public boolean pickAndExecuteAnAction() {
		// TODO Auto-generated method stub
		if(GlassOnSensor && !PreviouslyGlassOnSensor){
	        conveyor.msgGlassOnPrePopupSensor();
	        PreviouslyGlassOnSensor = GlassOnSensor;
	        return true;
	    }
	    else if(GlassOnSensor){
	        PreviouslyGlassOnSensor = GlassOnSensor;
	        return true;
	    }
	    if(!GlassOnSensor && PreviouslyGlassOnSensor){
	        conveyor.msgGlassOffPrePopupSensor();
	        PreviouslyGlassOnSensor = GlassOnSensor;
	    }
	    return false;
	}
	
	public void msgGlassOnSensor(){ //From Transducer
	    GlassOnSensor = true;
	    stateChanged();
	    print("Glass On Sensor");
	}
	public void msgGlassOffSensor(){ //From Transducer
	    GlassOnSensor = false;
	    stateChanged();
	    print("Glass Off Sensor");
	}
	
	
	

}
